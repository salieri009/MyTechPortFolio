plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.flywaydb.flyway' version '9.22.3'
}

group = 'com.mytechfolio'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    
    // Database Migration
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'
    
    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'
    
    // Google Authenticator (2FA)
    implementation 'dev.samstevens.totp:totp:1.7.1'
    
    // Google API Client - 더 간단한 방법으로 변경
    implementation 'com.google.auth:google-auth-library-oauth2-http:1.19.0'
    
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mysql'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Flyway configuration
flyway {
    url = project.hasProperty('flyway.url') ? project.property('flyway.url') : 'jdbc:h2:mem:testdb'
    user = project.hasProperty('flyway.user') ? project.property('flyway.user') : 'sa'
    password = project.hasProperty('flyway.password') ? project.property('flyway.password') : ''
    locations = ['classpath:db/migration']
    baselineOnMigrate = true
    validateOnMigrate = true
}
